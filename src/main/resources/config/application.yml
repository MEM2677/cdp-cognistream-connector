application:
  frontend-url: http://localhost:3000 # URL del FE per generare i link
  images-path: ./images
  notifications:
    from: ${spring.mail.username}
    to: ${NOTIFICATIONS_TO_EMAILS}
    configs:
      evangelist-subscription:
        subject: Richiesta Nuovo Evangelist
        frontend-path: "/entando-de-app/en/back_office_innova.page#/lista-evangelist" # path del FE della pagina del BO per la gestione Evangelists (viene incluso nella mail)
      idea-submission:
        subject: Nuova Idea Ricevuta

cognistreamer:
  api:
    access-token-uri: ${cognistreamer.api.base-url}/oauth2/token
    base-url: https://cdp-staging.cognistreamer.com
    client-id: ddd704b9400e462b992488d6bad9404e
    client-secret: APoejoCAnOhm4iqEdFvC0waDJJFr6oAo
  batch-size: 50
  sync-cron: 0 0/30 * * * *
  clean-images-cron: 0 0 0 * * *
#  enabledCommunities:
#    - bfcd257e-3496-46c1-9788-6368dcdc7e08

feign:
  circuitbreaker:
    enabled: true

logging:
  level:
    ROOT: INFO

management:
  endpoints:
    web:
      base-path: /management
      exposure:
        include: [ 'configprops', 'env', 'health', 'info', 'jhimetrics', 'logfile', 'loggers', 'prometheus', 'threaddump', 'liquibase' ]
  endpoint:
    health:
      show-details: when_authorized
      roles: 'ROLE_ADMIN'
      probes:
        enabled: true
    jhimetrics:
      enabled: true
  info:
    git:
      mode: full
  health:
    group:
      liveness:
        include: livenessState
      readiness:
        include: readinessState,db
    mail:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
        step: 60
    enable:
      http: true
      jvm: true
      logback: true
      process: true
      system: true
    distribution:
      percentiles-histogram:
        all: true
      percentiles:
        all: 0, 0.5, 0.75, 0.95, 0.99, 1.0
    tags:
      application: ${spring.application.name}
    web:
      server:
        request:
          autotime:
            enabled: true

server:
  port: 8081
  servlet:
    session:
      cookie:
        http-only: true
  shutdown: graceful

spring:
  application:
    name: cdpinnova
  devtools:
    livereload:
      enabled: false # we use Webpack dev server + BrowserSync for livereload
    restart:
      enabled: true
      additional-exclude: static/**
  profiles:
    active:
    group:
      dev:
        - api-docs
      staging:
        - api-docs
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:postgresql://localhost:5432/innova2_ds_db
    username: innova2_ds_db_user
    password: innova2_ds_db_pass
    hikari:
      poolName: Hikari
      auto-commit: false
  data:
    jpa:
      repositories:
        bootstrap-mode: deferred
  jackson:
    default-property-inclusion: non_null
    serialization:
      indent-output: true
  jmx:
    enabled: false
  jpa:
    database-platform: tech.jhipster.domain.util.FixedPostgreSQL10Dialect
    open-in-view: false
    properties:
      hibernate.jdbc.time_zone: UTC
      hibernate.id.new_generator_mappings: true
      hibernate.connection.provider_disables_autocommit: true
      hibernate.cache.use_second_level_cache: false
      hibernate.cache.use_query_cache: false
      hibernate.generate_statistics: false
      hibernate.jdbc.batch_size: 100
      hibernate.order_inserts: true
      hibernate.order_updates: true
      hibernate.query.fail_on_pagination_over_collection_fetch: true
      hibernate.query.in_clause_parameter_padding: true
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
    show-sql: false
  liquibase:
    contexts: dev
    url: ${spring.datasource.url}
  mail:
    host: smtp.office365.com
    port: 587
    username: ${SMTP_USER}
    password: ${SMTP_PASSWORD}
    test-connection: true
    properties:
      mail:
        smtp:
          starttls:
            enabled: true
            required: true
  main:
    allow-bean-definition-overriding: true
  messages:
    basename: i18n/messages
  task:
    execution:
      thread-name-prefix: cdpinnova-task-
      pool:
        core-size: 2
        max-size: 50
        queue-capacity: 10000
    scheduling:
      thread-name-prefix: cdpinnova-scheduling-
      pool:
        size: 2
  thymeleaf:
    mode: HTML
    cache: false
  sleuth:
    sampler:
      probability: 1
  output:
    ansi:
      console-available: true
  security:
    oauth2:
      client:
        provider:
          oidc:
            issuer-uri: http://localhost:9080/auth/realms/jhipster
        registration:
          oidc:
            client-id: internal
            client-secret: internal
            scope: openid,profile,email
  zipkin: # Use the "zipkin" Maven profile to have the Spring Cloud Zipkin dependencies
    base-url: http://localhost:9411
    enabled: false
    locator:
      discovery:
        enabled: true

info:
  display-ribbon-on-profiles: 'dev'

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================
jhipster:
  clientApp:
    name: 'cdpinnovaApp'
  cors:
    allowed-origins:
      - ${application.frontend-url}
    allowed-methods: "*"
    allowed-headers: "*"
    exposed-headers: "Authorization,Link,X-Total-Count,X-${jhipster.clientApp.name}-alert,X-${jhipster.clientApp.name}-error,X-${jhipster.clientApp.name}-params"
    allow-credentials: true
    max-age: 1800
  logging:
    use-json-format: false
    logstash:
      enabled: false
      host: localhost
      port: 5000
      queue-size: 512
  mail:
    from: cdpinnova@localhost
  api-docs:
    default-include-pattern: ${server.servlet.context-path:}/api/.*
    management-include-pattern: ${server.servlet.context-path:}/management/.*
    title: cdpinnova API
    description: cdpinnova API documentation
    version: 0.0.1
    terms-of-service-url:
    contact-name:
    contact-url:
    contact-email:
    license: unlicensed
    license-url:
  security:
    content-security-policy: "default-src 'self'; frame-src 'self' data:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://storage.googleapis.com; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' data:"
    oauth2:
      audience:
        - account
        - api://default

springfox:
  documentation:
    enabled: true

swagger-ui:
  client-id: swagger_ui
  client-secret: swagger_ui
